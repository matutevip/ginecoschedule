Hola! Gracias por el reporte, est√° s√∫per detallado y me sirve mucho para ver d√≥nde estamos parados.

Me gustar√≠a que avancemos con la resoluci√≥n de estos problemas en este orden, priorizando las funcionalidades que impactan directamente en la experiencia del paciente y la doctora:

‚úÖ TAREAS PRIORITARIAS (en orden)
1. üõ†Ô∏è Implementar correctamente los d√≠as eventuales con horarios espec√≠ficos
Objetivo: Permitir que la doctora agregue d√≠as laborales eventuales con franja horaria definida, que luego aparezcan como turnos disponibles.

Instrucciones:

Integrar el c√≥digo √∫til del archivo admin.tsx.backup en el archivo activo de configuraci√≥n de agenda.

Activar y usar correctamente la columna occasional_work_day_times:

Esta columna deber√≠a guardar un JSON con estructura como:

json
Copy
Edit
{
  "2025-06-27": { "start": "15:00", "end": "19:00" }
}
Asegurarse de que:

En el frontend se puedan agregar d√≠as eventuales con su franja horaria.

En el backend se generen turnos en base a esos horarios.

Verificar consistencia horaria (verificar toZonedTime en esta parte).

2. üîß Corregir el render de los d√≠as bloqueados por la doctora
Objetivo: Que la doctora pueda bloquear un d√≠a espec√≠fico desde el calendario, y ese d√≠a no est√© disponible para los pacientes.

Instrucciones:

Agregar una funcionalidad de toggle en el calendario del dashboard de la doctora.

Al activarlo, se debe guardar la fecha como bloqueada en una nueva tabla o columna blocked_days.

En el backend, excluir estos d√≠as al generar los d√≠as disponibles para pacientes.

Asegurarse de que si un d√≠a est√° bloqueado, no se puedan cargar d√≠as eventuales sobre ese mismo d√≠a.

3. üîÅ Revisi√≥n del manejo de zonas horarias
Objetivo: Evitar errores por inconsistencias horarias (especialmente en d√≠as eventuales).

Instrucciones:

Estandarizar uso de toZonedTime o el enfoque elegido para convertir y mostrar horarios en la zona correcta.

Verificar si la doctora y pacientes deben ver los turnos siempre en la misma zona horaria (probablemente America/Argentina/Buenos_Aires).

4. üì¨ Implementar integraci√≥n con Mercado Pago
Objetivo: Enviar un link de pago en el email de confirmaci√≥n de turno al paciente.

Instrucciones:

Usar Checkout Preferences de Mercado Pago para generar links de pago.

Crear un link √∫nico por turno con los datos del paciente, d√≠a/hora y precio.

Incluir el bot√≥n ‚ÄúPagar ahora con Mercado Pago‚Äù en el email de confirmaci√≥n.

Si el paciente ya pag√≥, actualizar el estado del turno a ‚ÄúPagado‚Äù.

5. ‚ùå Agregar bot√≥n para cancelar turno desde el email
Objetivo: Que el paciente pueda cancelar el turno directamente desde el mail que recibe.

Instrucciones:

En el mail de confirmaci√≥n, agregar un bot√≥n ‚ÄúCancelar turno‚Äù.

El bot√≥n debe llevar a un link √∫nico con token seguro que:

Permita identificar el turno y marcarlo como cancelado.

Muestre una p√°gina simple confirmando la cancelaci√≥n.

üßπ TAREAS ADICIONALES DE MANTENIMIENTO (baja prioridad pero importantes)
Eliminar archivos duplicados (por ejemplo, los scripts de migraci√≥n repetidos).

Consolidar l√≥gica de d√≠as eventuales en una sola funci√≥n/m√≥dulo.

Eliminar console.log innecesarios del entorno de producci√≥n.

Importar correctamente las funciones/variables que est√°n causando warnings.

Evaluar si volvemos a habilitar la sincronizaci√≥n bidireccional con Google Calendar.

¬øPod√©s arrancar por la Tarea 1 (horarios para d√≠as eventuales)?
Cuando eso est√© resuelto y andando, seguimos con la siguiente. Si quer√©s, te puedo ayudar a priorizar bugs menores o revisar visualmente alg√∫n m√≥dulo.

